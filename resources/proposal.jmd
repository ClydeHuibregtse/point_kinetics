# Final Project Proposal: Point Kinetics
Clyde Huibregtse
## Point Kinetics
The dynamics of a nuclear reactors are governed by computationally intractable
quantum mechanics tightly coupled with thermalhydraulic responses from the fuel and
supporting materials. Consequently, no tool exists to model reactor core state
with the fidelity to track individual neutrons as well as thermal responses at the
macroscopic fuel level. So, engineers have developed some simplifying assumptions
to make the computation more efficacious. One such example that gives quite
good results when compared to experimentally measured reactor physics is
the point reactor.

The point reactor is not a simplification where all the fuel is considered to be
colocated at one point. Rather, it is an assumption that the reactive properties
of the fuel are spacially independent. This is a relatively safe assumption for
most reactors under slow (normal operational) transients. The equations are
reproduced below:

```math
\frac{dn}{dt} = \frac{ρ - β}{Λ}n + Σ_i λ_iC_i
```
```math
\frac{dC_i}{dt} = \frac{β_i}{Λ}n - λ_iC_i
```

Where $n$ is the normalized reactor power (as a function of the number of living
netrons in the core), and each $C_i$ is the concentration of the $i$th
precursor group. The remaining values are parameters defining average neutron
lifetimes, external reactivity, etc. Each of those parameters is precomputed
using some higher fidelity (static) tool and then piped into this
model to determine reactor dynamics.

Additionally, reactor engineers have explored coupling thermal feedback into
the above equations. A lot struggle with a two-part, lagging solution where
neutronics and thermalhydraulics are calculated separately, and their nonlinear
interactions are inadequately simplified. There are many documented attempts at
compensating for this with adaptive timestepping, JFNK, Backward Euler, etc.
Regardless, these equations are still incredibly stiff, and fast implementations
are not readily available.


## Improvements and Project Ideas
First, this project will cover an optimized implementation of the
primitive point kinetics equations (without thermal feedback). Once this
baseline has been acheived, advanced coupling techniques can be added to the
solver to include temperature-reactivity feedback.
Python implementations with black-box equation solvers do exist, but have
bottlenecked research through their slow solution convergence, and lack of reactor generality.
It is against these public implementations that the optimized implementation can be
benchmarked. Finally, with a working reactor simulator, core responses to
various control sequences can be examined. From these data, intelligent controllers
can be trained for deployment in commercial power reactors.
